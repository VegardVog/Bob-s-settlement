openapi: 3.1.0
info:
  title: Expense Share API
  description: API for managing user accounts, settlements, and expenses
  version: 0.2.3
  contact:
    name: Bob's Settlements
servers:
  - url: http://localhost:4000

tags:
  - name: Authentication
  - name: Users
  - name: Settlements

paths:
  /auth/signup:
    post:
      summary: Register a new user
      description: Creates a new user account with the provided details.
      operationId: registerUser
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupRequest'
      responses:
        '200':
          description: User successfully registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/signin:
    post:
      summary: Log in as an existing user
      description: Logs in the user with the provided credentials.
      operationId: loginUser
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: User successfully logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JwtResponse'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/profile:
    get:
      summary: Get user profile
      description: Retrieves the user's profile information.
      operationId: getUserProfile
      tags:
        - Users
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      summary: Update user profile
      description: Updates the user's profile information.
      operationId: updateUserProfile
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileUpdateRequest'
      responses:
        '200':
          description: User profile updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/delete:
    delete:
      summary: Delete user account
      description: Deletes the user account permanently.
      operationId: deleteUserAccount
      tags:
        - Users
      responses:
        '204':
          description: User account deleted successfully
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /settlements:
    post:
      summary: Create a new expense share settlement
      description: Creates a new expense share settlement.
      operationId: createSettlement
      tags:
        - Settlements
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SettlementCreateRequest'
      responses:
        '201':
          description: Settlement created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settlement'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /settlements/{setId}/users:
    put:
      summary: Add user to settlement
      description: Adds a user to the specified settlement.
      operationId: addUserToSettlement
      tags:
        - Settlements
      parameters:
        - in: path
          name: setId
          required: true
          description: ID of the settlement
          schema:
            type: string
        - in: query
          name: userId
          required: true
          description: ID of the user to add
          schema:
            type: string
      responses:
        '200':
          description: User added to settlement successfully
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: Remove user from settlement
      description: Removes a user from the specified settlement.
      operationId: removeUserFromSettlement
      tags:
        - Settlements
      parameters:
        - in: path
          name: setId
          required: true
          description: ID of the settlement
          schema:
            type: string
        - in: query
          name: userId
          required: true
          description: ID of the user to remove
          schema:
            type: string
      responses:
        '200':
          description: User removed from settlement successfully
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /settlements/{setId}:
    patch:
      summary: Close settlement
      description: Closes the specified settlement.
      operationId: closeSettlement
      tags:
        - Settlements
      parameters:
        - in: path
          name: setId
          required: true
          description: ID of the settlement
          schema:
            type: string
      responses:
        '200':
          description: Settlement closed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/settlements:
    get:
      summary: Get user's settlement history
      description: Retrieves the user's settlement history.
      operationId: getUserSettlementHistory
      tags:
        - Users
      responses:
        '200':
          description: User's settlement history retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Settlement'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


components:
  schemas:
    UserSignupRequest:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
        profilePicture:
          type: string
          format: uri
      required:
        - username
        - email
        - password

    UserLoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
      required:
        - email
        - password

    UserProfile:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        profilePicture:
          type: string
          format: uri

    UserProfileUpdateRequest:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        profilePicture:
          type: string
          format: uri

    SettlementCreateRequest:
      type: object
      properties:
        name:
          type: string
      required:
        - name

    Settlement:
      type: object
      properties:
        id:
          type: string
        name:
          type: string

    LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password
    JwtResponse:
      type: object
      properties:
        token:
          type: string
        id:
          type: string
        username:
          type: string
        email:
          type: string
        role:
          type: array
          items:
            type: string
    SignupRequest:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
        role:
          type: array
          items:
            type: string
            example: "admin"
      required:
        - username
        - email
        - password
    MessageResponse:
      type: object
      properties:
        message:
          type: string